{"version":3,"sources":["api/goods.ts","GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","a","goods","sort","b","name","localeCompare","splice","getRedGoods","filter","item","color","GoodsList","map","good","id","style","App","state","getGoods","callback","setState","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0QAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACHN,IADG,cACjBO,EADiB,yBAGhBA,EAAMC,MAAK,SAACF,EAASG,GAAV,OAAsBH,EAAEI,KAAKC,cAAcF,EAAEC,SAC5DE,OAAO,EAAG,IAJU,2CAAH,qDAOTC,EAAW,uCAAG,4BAAAP,EAAA,sEACLN,IADK,cACnBO,EADmB,yBAGlBA,EAAMO,QAAO,SAACC,GAAD,MAA+B,QAAfA,EAAKC,UAHhB,2CAAH,qD,OCTXC,EAA6B,SAAC,GAAe,IAAbV,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMW,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,GAAIJ,EAAgBG,EAAhBH,MAAON,EAASS,EAATT,KAEnB,OACE,oBAAaW,MAAO,CAAEL,SAAtB,SAAgCN,GAAvBU,SCPNE,EAAb,4MACEC,MAAQ,CACNhB,MAAO,IAFX,EAKEiB,SALF,uCAKa,WAAOC,GAAP,eAAAnB,EAAA,sEACWmB,IADX,OACHlB,EADG,OAGT,EAAKmB,SAAS,CAAEnB,UAHP,2CALb,kGAWE,WACE,IAAQA,EAAUoB,KAAKJ,MAAfhB,MACAiB,EAAaG,KAAbH,SAER,OACE,qCACE,gDACA,wBACEI,KAAK,SACLC,QAAS,WACPL,EAASxB,IAHb,4BASA,wBACE4B,KAAK,SACLC,QAAS,WACPL,EAASnB,IAHb,gCASA,wBACEuB,KAAK,SACLC,QAAS,WACPL,EAASX,IAHb,4BASA,cAAC,EAAD,CAAWN,MAAOA,WA7C1B,GAAyBuB,IAAMC,WCH/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.59d7011a.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async () => {\n  const goods = await getAll();\n\n  return goods.sort((a: Good, b: Good) => a.name.localeCompare(b.name))\n    .splice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const goods = await getAll();\n\n  return goods.filter((item: Good) => item.color === 'red');\n};\n","import React from 'react';\n\ninterface Props {\n  goods: Good[]\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => {\n        const { id, color, name } = good;\n\n        return (\n          <li key={id} style={{ color }}>{name}</li>\n        );\n      })}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './GoodsList';\n\nexport class App extends React.Component<{}, {}> {\n  state = {\n    goods: [],\n  };\n\n  getGoods = async (callback : () => Promise<Good[]>) => {\n    const goods = await callback();\n\n    this.setState({ goods });\n  };\n\n  render() {\n    const { goods } = this.state;\n    const { getGoods } = this;\n\n    return (\n      <>\n        <h1>Push on Button</h1>\n        <button\n          type=\"button\"\n          onClick={() => {\n            getGoods(getAll);\n          }}\n        >\n          Load All goods\n\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            getGoods(get5First);\n          }}\n        >\n          Load 5 first goods\n\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            getGoods(getRedGoods);\n          }}\n        >\n          Load red goods\n\n        </button>\n        <GoodsList goods={goods} />\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}